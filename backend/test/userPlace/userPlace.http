@baseUrl = http://localhost:3000
@accessToken = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2ViYjk4OTE3YTMyNjdiYzQ0M2FiNDUiLCJpYXQiOjE3NDM1NTAyOTEsImV4cCI6MTc0MzU1NzQ5MX0.weupkvsaP5GaTNDSmQU2HiAT7xydUMqcYwph8qiCBVo

### Crear un Lugar de Usuario
POST {{baseUrl}}/api/userPlace/create HTTP/1.1
Content-Type: application/json
Authorization: {{accessToken}}

{
  "placeId": "67ec808ebda63b9475c082c6",
  "status": "visited",
  "visitedAt": "2023-12-01"
}

### Actualizar UserPlace (con una fecha específica)
PATCH {{baseUrl}}/api/userPlace/update
Content-Type: application/json
Authorization: {{accessToken}}

{
  "placeId": "67ec808ebda63b9475c082c6",
  "status": "visited",
  "visitedAt": "2003-12-01"
}

### Actualizar UserPlace (sin fecha)
PATCH {{baseUrl}}/api/userPlace/update
Content-Type: application/json
Authorization: {{accessToken}}

{
  "placeId": "67ec808ebda63b9475c082c6",
  "status": "favorite"
}

### Obtener todos los UserPlaces del usuario autenticado
GET {{baseUrl}}/api/userPlace
Authorization: {{accessToken}}

### Obtener UserPlaces filtrados por categoría
GET {{baseUrl}}/api/userPlace?category=residential
Authorization: {{accessToken}}

### Obtener UserPlaces filtrados por estado
GET {{baseUrl}}/api/userPlace?status=favorite
Authorization: {{accessToken}}

### Obtener UserPlaces filtrados por categoría y estado
GET {{baseUrl}}/api/userPlace?category=station&status=visited
Authorization: {{accessToken}}

### Eliminar UserPlace (soft delete)
DELETE {{baseUrl}}/api/userPlace/67ed0ca5390bdb1b126f1464 HTTP/1.1
Authorization: {{accessToken}}

### Eliminar UserPlace (hard delete)
DELETE {{baseUrl}}/api/userPlace/67ed0ca5390bdb1b126f1464?soft=false HTTP/1.1
Authorization: {{accessToken}}

### Contamos los userPlaces del usuario (puede aplicarse un filtro por categoría o estado)
GET {{baseUrl}}/api/userPlace/count
Authorization: {{accessToken}}